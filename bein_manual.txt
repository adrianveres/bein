Outline:

Overview: What is bein, what is the motivation for writing it
Ways you can use bein (as a library in other programs, for scripts)

MiniLIMS:
The format of a MiniLIMS repository.  Very simple, just an SQLite database and a directory.
MiniLIMS tracks executions, which we'll explain in the next section, and files.
Give the information stored for a file, and how it's given a random repository name.
Show how to import and export, copy, and delete files.
Explain file aliases
File associations: when to use them, how do they work, naming conventions.  Examples: bowtie indices, and BAM index files.

Execution:
What an execution does: sets up a temporary directory, handles copying files in from the MiniLIMS, recording what programs are run, and writing files back to the MiniLIMS.

Simplest example: with execution(M) as ex: pass

Then add one program
Add using a file and adding a file.
Example with aliases.

Run nonblocking (and LSF), futures, and waiting.  Using list comprehensions to start parallel jobs easily.

Programs:
How to bind a program.  Decorate any function with @program,
function needs to return a dictionary with keys "arguments" and "return_value"
return value can be a value or a function.
Give a bunch of examples such as split, bowtie, sam_to_bam, and running another Python or R script.
Then show writing functions that encapsulate a bunch of programs, such as running bowtie, making a BAM file from its SAM output, and indexing it.
